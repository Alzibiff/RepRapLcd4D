#platform "uLCD-32PT_GFX2"
/*
 ReprapLcd4D Firmware for RepRap 3D Printer.

 Copyright (C) 2012 Marco Antonini

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#inherit "4DGL_16bitColours.fnc"
#inherit "GfxInterface.fnc"
#inherit "SerialManager.fnc"
#inherit "TouchManager.fnc"
#inherit "GfxInterfaceConst.inc"
#inherit "Constant.inc"

func initSD()
    gfx_Set(SCREEN_MODE,LANDSCAPE);
    var err:=0;
    var disk;
    setFontInfo(0,0);
    putstr("init..\n");
    putstr("mounting..\n");
    if (!(disk:=file_Mount()))
        txt_FGcolour(RED);
        putstr("Error: Drive not found!\n");
        putstr("Try Remounting...\n");
        while(!(disk :=file_Mount()))
            err++;
            if(err>30)
                putstr("Rebooting..\n");
                pause(1000);
                SystemReset();
            endif
        wend
    endif
    putstr("Starting Interface..\n");
    hndl := file_LoadImageControl("GFXINT~1.dat", "GFXINT~1.gci", 1);
    gfx_TransparentColour(0x0020);
    gfx_Transparency(ON);
    gfx_Cls();
endfunc


func main()

    initSD();
    initVars();
    drawGfxInterface();
    SerialInit();
    touch_Set(TOUCH_ENABLE);

repeat

    //--------------------------------------------------
    // scan for Touch
    //--------------------------------------------------

    var touchState;
    var touchX,touchY;

    touchState := touch_Get(TOUCH_STATUS);
    touchX := touch_Get(TOUCH_GETX);
    touchY := touch_Get(TOUCH_GETY);

    if(touchState == TOUCH_PRESSED)
        TouchEvent(touchX,touchY);
    else if(touchState == TOUCH_MOVING && EN_TOUCH_MOVING && WINDOW != W_MAIN && WINDOW != W_SDCARD )
        TouchEvent(touchX,touchY);
    else if(touchState == TOUCH_RELEASED && WINDOW != W_SDCARD )
        TouchReleasedEvent();
    endif

    //--------------------------------------------------
    // scan for Serial Data
    //--------------------------------------------------
     SerialEvent();
     SerialErrorWatchDog();

forever

endfunc

//=======================================================

func initVars()
    EN_TOUCH_MOVING:=FALSE;
    WINDOW:=W_MAIN;
    //WINDOW:=W_SDCARD; //for DEBUG
    current_extruder:=0;
    //Init Global Vars
    _ttH0:=0; //Temp Target HotEnd0
    to(ttH0); print("000");
    _ttH1:=0; //Temp Target HotEnd1
    to(ttH1); print("000");
    _ttB:=0;  //Temp Target Bed
    to(ttB); print("000");
    to(tH0); print("000");  //Temp HotEnd0
    to(tH1); print("000");  //Temp HotEnd1
    to(tB); print("000");   //Temp Bed
    to(zPos); print("+000.00");
    to(timePrint); print("00h00m");
    to(sdPerc); print("000");
    to(ex_setmm); print("10");     // Extrude mm of filament
    to(ex_setmm_min); print("200"); // Extruder mm/min
    to(ex_setTemp); print("205"); //Button Set Ext. Temp
    to(bed_setTemp); print("55"); //Buttpn Set Bed Temp
    to(msg); print(""); //Max 46 char
endfunc

/*func returnToMainWatchDog(var type)
    if(type==SET_TIMER)
         sys_SetTimerEvent(TIMER0, returnToMain);
         sys_SetTimer(TIMER0,2000);
    else if(type==REMOVE_TIMER)
         sys_SetTimer(TIMER0,0);
    endif
endfunc

func returnToMain()
    WINDOW:=W_MAIN;
    gfx_RectangleFilled(0, 167, 319, 229,BLACK);
    drawGfxInterface();
endfunc*/

func sound(var type)
     snd_Volume(127);
     if(type==STARTUP)
        if(file_Exists("startup.wav"))
            file_PlayWAV("startup.wav");
        endif
     else if(type==ALERT)
         if(file_Exists("alert.wav"))
            file_PlayWAV("alert.wav");
         endif
     else if(type==FINISH)
         if(file_Exists("finish.wav"))
            file_PlayWAV("finish.wav");
         endif
    endif
endfunc

//sys_SetTimerEvent(TIMER5, myfunc);
//sys_SetTimer(TIMER5,200);
